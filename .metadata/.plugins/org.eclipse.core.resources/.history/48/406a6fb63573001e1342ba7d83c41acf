package com.spring.board.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.spring.board.dao.BoardDao;
import com.spring.board.service.boardService;
import com.spring.board.vo.BoardVo;
import com.spring.board.vo.PageVo;

@Service
public class boardServiceImpl implements boardService{
	
	@Autowired
	BoardDao boardDao;
	
	@Override
	public String selectTest() throws Exception {
		// TODO Auto-generated method stub
		return boardDao.selectTest();
	}
	
	@Override
	public List<BoardVo> SelectBoardList(PageVo pageVo, List<String> filters) throws Exception {
		// TODO Auto-generated method stub
		List<BoardVo> allBoardList = boardDao.selectAllBoardList();

	    if (filters != null && !filters.isEmpty()) {
	        allBoardList = filterAllBoardList(allBoardList, filters);
	    }

	    // 페이지 번호와 페이지당 아이템 수를 고려하여 필요한 범위의 데이터를 추출
	    int itemsPerPage = 10;
	    int start = (pageVo.getPageNo() - 1) * itemsPerPage;
	    int end = Math.min(start + itemsPerPage, allBoardList.size());

	    return allBoardList.subList(start, end);
	}
	
	@Override
	public int selectBoardCnt() throws Exception {
		// TODO Auto-generated method stub
		return boardDao.selectBoardCnt();
	}
	
	@Override
	public BoardVo selectBoard(String boardType, int boardNum) throws Exception {
		// TODO Auto-generated method stub
		BoardVo boardVo = new BoardVo();
		
		boardVo.setBoardType(boardType);
		boardVo.setBoardNum(boardNum);
		
		return boardDao.selectBoard(boardVo);
	}
	
	@Override
	public int boardInsert(BoardVo boardVo) throws Exception {
		// TODO Auto-generated method stub
		return boardDao.boardInsert(boardVo);
	}

	@Override
	public int boardUpdate(BoardVo boardVo) throws Exception {
		// TODO Auto-generated method stub
		return boardDao.boardUpdate(boardVo);
	}

	@Override
	public boolean boardDelete(String boardType, int boardNum) throws Exception {
		// TODO Auto-generated method stub
	    boolean deleted = boardDao.boardDelete(boardType, boardNum);
        return deleted;
    }

	@Override
	public List<BoardVo> filterAllBoardList(List<BoardVo> allBoardList, List<String> filters) {
		// TODO Auto-generated method stub
		List<BoardVo> filteredBoardList = new ArrayList<>();

	    for (BoardVo board : allBoardList) {
	        String codeName = board.getComcodevo().getCodeName();
	        if (filters.contains(codeName)) {
	            filteredBoardList.add(board);
	        }
	    }

	    return filteredBoardList;
	}

	

	
	
}
