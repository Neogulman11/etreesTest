package com.spring.board.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.spring.board.service.boardService;
import com.spring.board.service.mbtiService;
import com.spring.board.vo.BoardVo;
import com.spring.board.vo.PageVo;

@Controller
public class MbtiController {
	@Autowired
	mbtiService mbtiService;
	boardService boardService;
	
	@RequestMapping(value = "/mbti/mbtiMain.do", method = RequestMethod.GET)
	public String mainForm() {
		return "mbti/mbtiMain";
	}
	
	@RequestMapping(value = "/mbti/mbtiTest.do", method = RequestMethod.GET)
	public String testForm(Model model, PageVo pageVo) throws Exception {
	    List<BoardVo> boardList = new ArrayList<BoardVo>();
	    
	    int page = 1;
	    int totalCnt = 0;

	    if(pageVo.getPageNo() == 0){
			pageVo.setPageNo(page);;
		}
	    
	    boardList = mbtiService.selectTestListPaged(pageVo);
	    totalCnt = mbtiService.totalCount();
	    
	    
	    model.addAttribute("boardList", boardList);
	    model.addAttribute("totalCnt", totalCnt);
	    model.addAttribute("currentPage", pageVo);
	    
	    
	    return "mbti/mbtiTest";
	}
	
	@RequestMapping(value = "/mbti/mbtiResult.do", method = RequestMethod.POST)
    @ResponseBody
    public String handleAjaxRequest(@RequestBody Map<String, String> sessionData) {
        // 클라이언트로부터 전송된 세션 데이터를 받아와 처리합니다.
        // 이 부분에서 세션 데이터를 사용하여 원하는 작업을 수행합니다.

        // 결과 데이터를 생성합니다.
        Map<String, String> resultData = new HashMap<>();
        // 예: 결과 데이터에 필요한 값을 추가합니다.

        // 결과를 JSON 형식으로 반환합니다.
        return new ObjectMapper().writeValueAsString(resultData);
    }

	
}
